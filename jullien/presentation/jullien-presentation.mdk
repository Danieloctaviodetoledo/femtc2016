[INCLUDE=presentation]
Title         : Stochastic analysis of egress simulations
Sub Title     : 
Author        : Quentin Jullien
Affiliation   : Centre Scientifique et Technique du BÃ¢timent
Email         : quentin.jullien@cstb.fr
Reveal Theme  : sky
Beamer Theme  : singapore

[TITLE]

# Content

[TOC]


~ Begin Vertical { data-background:Gainsbor }

# Context {#vertical}
The use of egress simulation models in performance-based analysis relies on the confidence in the input data and the output data.

* But data strongly depend on a large number of parameters.
* So the results are prone to be scattered.

[![arrowdown]][down]


[down]: # { .navigate-down }
[arrowdown]: images/arrow.png "Down arrow" { width:178px; height:238px }

## Aim of the study
Propose a method to analyse the statistical aspects of an egress simulation model.

* The method is based on statistical estimations of the distribution quantiles of the output parameters.
The key result is Required Safe Egress Time (RSET).

Benefits of the method :

* Provide quantitative informations on the RSET.
* Justify the number of simulations to obtain a relevant output precision level.



~ End Vertical


~ Begin Vertical { data-background:Gainsbor }

# Presentation of the method of statistical analysis {#vertical}

Example : 

* Take a sample of n realizations of a random variable that follows a normal law distribution.
* Build a confidence interval Ip for each order quantile &alpha;.
* Choose a level of confidence p: here 90%.

~ Equation { #eq-alignment; caption:"Alignment example" }
\begin{aligned} 
 Ip  &= \bigg[\tilde{F}^{-1} \bigg( \alpha -c\sqrt{\frac{\alpha(1-\alpha)}{n}} \bigg) ; \tilde{F}^{-1} \bigg( \alpha +c\sqrt{\frac{\alpha(1-\alpha)}{n}} \bigg) \bigg]
\end{aligned}
~

c equals to 16.45 for p=90%. 

[![arrowdown]][down]


[down]: # { .navigate-down }
[arrowdown]: images/arrow.png "Down arrow" { width:178px; height:238px }
## Build the empirical distribution function
Random realizations ranked in ascending order constitute the 
empirical distribution function.


~ Center
![fig3_1]
[fig3_1]: images/fig3_1.PNG "fig3_1" { width:auto; max-width:55%}
~


## Observations

~ Align-Left
* A random variable can not show a theorical maximum.
* Even if the maximum value exists, the finite size of 
the samples didn't allow to access to this maximum value.

&rarr; Only percentiles are available.

* Percentiles increase with the growth of the sample size.
* Confidence interval decreases with the growth of the sample size.

&rarr; So, the required number of draws is set by:

* the desired precision,
* the order of the desired quantile.
~

~ End Vertical

~ Begin Vertical { data-background:Gainsbor }
# Hypothesis of the model

The numerical tool used in this study is BuildingExodus.

But, statistical processing can be performed with any simulator.

~ Begin Columns
~ Column { width:60% ; vertical-align:top}
Reminder :

* BuildingExodus is based on a discretization of space in node of 50 cm x 50 cm.
* The connection model is the one of Moore.
~
~ Column
![fig4_1]
[fig4_1]: images/fig4_1.PNG "fig4_1" { width:auto; max-width:60%}
~
~ End Columns

## Test case geometry

~ Center
![fig4_2]
[fig4_2]: images/fig4_2.PNG "fig4_2" { width:auto; max-width:70%}
~

## Behavioral hypothesis

~ Align-Left
Occupants:

* are men,
* have same leaderships,
* have same patience,
* are valid,
* have a speed of 1.2 m/s
* have a response time (RT) of 15 s or variable between 0 and 30 s,
* act independently of each other.

The identical leaderships imply a conflict resolution time include between 0.8 s and 1.5 s.
 During this study the fixed value of 1.15 s will be use too.

The draws are achieved with an uniform law.
~

~ End Vertical





~ Begin Vertical { data-background:Gainsbor }
# Study

Occupants are randomly positioned in the room and drawn between 1 and 1,000.

~ Begin Columns
~ Column { width:50% }
100 draws

![fig5_1]
[fig5_1]: images/fig5_1.PNG "fig5_1" { width:auto; max-width:100%}
~
~ Column
1,000 draws

![fig5_2]
[fig5_2]: images/fig5_2.PNG "fig5_2" { width:auto; max-width:100%}
~
~ End Columns

## Obervations

It is impossible to determine statistically a RSET maximum.

And a RSET max

&rarr; It seems preferable to retain the associated RSET 95th percentile.



~ End Vertical

~ Begin Vertical { data-background:Gainsbor }
## Reference case study 

~ End Vertical

~ Begin Vertical { data-background:Gainsbor }
## Analysis of the statistical influence of the parameters

~ End Vertical

~ Begin Vertical { data-background:Gainsbor }
# Synthesis of results

~ End Vertical

# Conclusion

# Thank you for your attention







## Reveal.js

* [Html][slide]:
  Uses the `Reveal.js` library by [Hakim El Hattab](http://hakim.se).\
  This slide demo in Madoko is an adaption of his online demo.
* [Pdf][slide-pdf]:
  Uses the `Beamer` package for LaTeX
* [Source][slide-mdk]:
  Click to see the source of this presentation.

[madoko]: http://madoko.codeplex.com
`reveal.js` is a framework for easily creating beautiful presentations using
HTML. You'll need a browser with support for CSS 3D transforms to see it in
its full glory. 

And any Madoko features just work. Here is some math:

~ Begin Framed { padding:1ex; margin-top:1ex }
A famous equation is $e = mc^2$, but this one is 
famous too:

~ Equation  {#eq-gaussian}
\int_{-\infty}^\infty e^{-a x^2} d x = \sqrt{\frac{\pi}{a}} 
~
~ End Framed

~~ Notes
Oh hey, these are some notes. They'll be hidden in your presentation, but you
can see them if you open the speaker notes window (hit 's' on your keyboard).
~~

## Code

Here is code, highlighted by Madoko 

``` javascript
function sqr( x ) {
  var \(&pi;\) = 3.141593;
  return x*x;  /* the square */
}
```
We used `\(` and `\)` to escape into markdown to write &pi;.

<!-- Example of nested vertical slides -->
~ Begin Vertical { data-background:Gainsbor }

## Vertical Slides {#vertical}
Slides can be nested inside of other slides,
try pressing [down].

[![arrowdown]][down]


[down]: # { .navigate-down }
[arrowdown]: images/arrow.png "Down arrow" { width:178px; height:238px }

## Basement Level 1
Press down or up to navigate.

## Basement Level 2

Use `columns` to put blocks next to each other:

~ Begin Columns
~ Column { width:50% }
A monarch butterfly (shown to the right)
spends the winter in Mexico.
~
~ Column
![butterfly]
~
~ End Columns

[butterfly]: images/butterfly.png "A Monarch butterfly" { width:380px; vertical-align:middle }


<!-- 
For local background images, we need to have a reference to the image
such that it's data gets embedded into the HTML page. We define
it using "display=none" so it is hidden in the presentation. 
We can then refer to the image in "data-background-image". 
-->

![bfly]
[bfly]: images/butterfly.png "Butterfly" { display:none }

## Basement Level 3 { data-background-image:images/butterfly.png }
That's it, time to go back up.

[![arrowup]][back2]

[arrowup]:  images/arrow.png "Up arrow" { width:178px; height:238px; transform:rotate(180deg) }
[back2]:    #vertical { .image }

~ End Vertical


## Themes {#themes}

Reveal.js comes with a few themes built in:

* [Default](?#/themes)
* [Sky](?theme=sky#/themes)
* [Beige](?theme=beige#/themes)
* [Serif](?theme=serif#/themes)
* [Simple](?theme=simple#/themes)
* [Night](?theme=night#/themes)
* [Moon](?theme=moon#/themes)
* [Solarized](?theme=solarized#/themes)

Theme demos are loaded after the presentation which leads to flicker. In
production you should load your theme in the `<head>` using a
`<link>`.

## Transitions { #transitions }

You can select from different transitions, like:\
[Cube](?transition=cube#/transitions) -
[Page](?transition=page#/transitions) -
[Concave](?transition=concave#/transitions) -
[Zoom](?transition=zoom#/transitions) -
[Linear](?transition=linear#/transitions) -
[Fade](?transition=fade#/transitions) -
[None](?transition=none#/transitions) -
[Default](?#/transitions)



## Pauses?

Some pauses.

* {.fragment} One
* {.fragment} Two
* {.fragment} Three

And more:

- Test 1
- Test 2
- Test 3
{.fragmented}

Cool!.

~ Slide
A slide with no header
~


## Point of View

In Reveal.js Press **ESC** to enter the slide overview.

Hold down alt and click on any element to zoom in on it using 
 [zoom.js]. Alt + click anywhere to zoom back out.


[zoom.js]: http://lab.hakim.se/zoom-js


## Works in Mobile Safari

Try it out! You can swipe through the slides and pinch your way to the
overview.


## Printing

You can print a `revealjs` presentation nicely from the browser.

First give the `?print-pdf` or `?print-paper` query on your final
presentation (in the browser address bar) and then print from the Chrome
browser selecting `Save to PDF`.

Read more about it at the [revealjs documentation](https://github.com/hakimel/reveal.js#pdf-export)

## RevealJS library

Normally, the `revealjs` library is loaded from a CDN but you can specify your
own url using metadata:

    Reveal Url: <my url>

This can be useful when using a [server to run revealjs](https://github.com/hakimel/reveal.js#full-setup)
where you may use something like:

    @nopreview Reveal Url: http://localhost:8000/reveal.js


## Thanks for looking :-)

[slide]: http://research.microsoft.com/en-us/um/people/daan/madoko/samples/slidedemo/out/slidedemo.html
[slide-mdk]: https://www.madoko.net/editor.html?#url=http://research.microsoft.com/en-us/um/people/daan/madoko/samples/slidedemo/slidedemo.mdk&options={"delayedUpdate":"true"}
[slide-pdf]: http://research.microsoft.com/en-us/um/people/daan/madoko/samples/slidedemo/out/slidedemo.pdf
